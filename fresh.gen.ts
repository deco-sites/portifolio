// DO NOT EDIT. This file is generated by deco.
// This file SHOULD be checked into source version control.
// This file is automatically updated during development when running `dev.ts`.

import config from "./deno.json" assert { type: "json" };
import { DecoManifest } from "$live/types.ts";
import * as $0 from "./routes/[...catchall].tsx";
import * as $1 from "./routes/_app.tsx";
import * as $2 from "./routes/_middleware.ts";
import * as $3 from "./routes/index.tsx";
import * as $$0 from "./islands/LiveControls.tsx";
import * as $$$0 from "./sections/Contact.tsx";
import * as $$$1 from "./sections/Footer.tsx";
import * as $$$2 from "./sections/Intro.tsx";
import * as $$$3 from "./sections/Menu.tsx";
import * as $$$4 from "./sections/Projects.tsx";
import * as $$$5 from "./sections/Work.tsx";
import * as $$$$0 from "./functions/LoadGitHubRaw.ts";

const manifest: DecoManifest = {
  routes: {
    "./routes/[...catchall].tsx": $0,
    "./routes/_app.tsx": $1,
    "./routes/_middleware.ts": $2,
    "./routes/index.tsx": $3,
  },
  islands: { "./islands/LiveControls.tsx": $$0 },
  sections: {
    "./sections/Contact.tsx": $$$0,
    "./sections/Footer.tsx": $$$1,
    "./sections/Intro.tsx": $$$2,
    "./sections/Menu.tsx": $$$3,
    "./sections/Projects.tsx": $$$4,
    "./sections/Work.tsx": $$$5,
  },
  functions: { "./functions/LoadGitHubRaw.ts": $$$$0 },
  schemas: {
    "./sections/Contact.tsx": {
      "inputSchema": {
        "title": " Contact",
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "items": {
              "title": "Contact",
              "type": "object",
              "properties": {
                "icon": {
                  "format": "image-uri",
                  "type": "string",
                  "title": "Icon",
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                },
                "link": {
                  "type": "string",
                  "title": "Link",
                },
                "subtitle": {
                  "type": "string",
                  "title": "Subtitle",
                },
              },
              "required": [
                "icon",
                "title",
                "link",
                "subtitle",
              ],
            },
            "title": "Contacts",
          },
        },
        "required": [
          "contacts",
        ],
      },
      "outputSchema": null,
    },
    "./sections/Footer.tsx": {
      "inputSchema": {
        "title": " Footer",
        "type": "object",
        "properties": {
          "tmp": {
            "type": "string",
            "title": "Tmp",
          },
        },
        "required": [
          "tmp",
        ],
      },
      "outputSchema": null,
    },
    "./sections/Intro.tsx": {
      "inputSchema": {
        "title": " Intro",
        "type": "object",
        "properties": {
          "descricao": {
            "type": "string",
            "title": "Descricao",
          },
          "status": {
            "type": "string",
            "title": "Status",
          },
          "nome": {
            "type": "string",
            "title": "Nome",
          },
          "profile": {
            "format": "image-uri",
            "type": "string",
            "title": "Profile",
          },
          "MainSkills": {
            "type": "array",
            "items": {
              "type": "string",
            },
            "title": " Main Skills",
          },
          "OthersSkills": {
            "type": "array",
            "items": {
              "type": "string",
            },
            "title": " Others Skills",
          },
        },
        "required": [
          "descricao",
          "status",
          "nome",
          "profile",
          "MainSkills",
          "OthersSkills",
        ],
      },
      "outputSchema": null,
    },
    "./sections/Menu.tsx": {
      "inputSchema": {
        "title": " Menu",
        "type": "object",
        "properties": {
          "dummy": {
            "type": "string",
            "title": "Dummy",
          },
        },
        "required": [
          "dummy",
        ],
      },
      "outputSchema": null,
    },
    "./sections/Projects.tsx": {
      "inputSchema": {
        "title": " Projects",
        "type": "object",
        "properties": {
          "projects": {
            "type": "array",
            "items": {
              "title": "Project",
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "title": "Title",
                },
                "url": {
                  "type": "string",
                  "title": "Url",
                },
                "description": {
                  "type": "string",
                  "title": "Description",
                },
              },
              "required": [
                "title",
                "url",
                "description",
              ],
            },
            "title": "Projects",
          },
        },
        "required": [
          "projects",
        ],
      },
      "outputSchema": null,
    },
    "./sections/Work.tsx": {
      "inputSchema": {
        "title": " Work",
        "type": "object",
        "properties": {
          "Works": {
            "type": "array",
            "items": {
              "title": "Work",
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "title": "Title",
                },
                "itens": {
                  "type": "array",
                  "items": {
                    "title": "WorkItem",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "title": "Title",
                      },
                      "subtitle": {
                        "type": "string",
                        "title": "Subtitle",
                      },
                      "itens": {
                        "type": "array",
                        "items": {
                          "type": "string",
                        },
                        "title": "Itens",
                      },
                    },
                    "required": [
                      "title",
                      "subtitle",
                      "itens",
                    ],
                  },
                  "title": "Itens",
                },
              },
              "required": [
                "title",
                "itens",
              ],
            },
            "title": " Works",
          },
        },
        "required": [
          "Works",
        ],
      },
      "outputSchema": null,
    },
    "./functions/LoadGitHubRaw.ts": {
      "inputSchema": {
        "title": " Load Git Hub Raw",
        "type": "object",
        "properties": {
          "repo": {
            "type": "string",
            "title": "Repo",
            "description": "Complete user/repo format",
          },
          "branch": {
            "type": "string",
            "title": "Branch",
            "description": "Branch",
          },
          "path": {
            "type": "string",
            "title": "Path",
            "description":
              "Path to fetch, or leave blank and add :path route param.",
          },
        },
        "required": [
          "repo",
          "branch",
          "path",
        ],
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "5b1cd5713a375e18bb93e9635b8a2dc5fc2672cf",
          },
        },
        "additionalProperties": true,
      },
    },
  },
  baseUrl: import.meta.url,
  config,
};

// live â€” this exposes the manifest so the live server can render components dynamically
globalThis.manifest = manifest;

export default manifest;
